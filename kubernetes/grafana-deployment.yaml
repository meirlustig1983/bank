apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [server]
    http_port = 3000
    root_url = %(protocol)s://%(domain)s:%(http_port)s/
    [paths]
    data = /var/lib/grafana/data
    [analytics]
    check_for_updates = true
    [security]
    admin_user = admin
    admin_password = admin
    [auth.anonymous]
    enabled = true
    org_role = Viewer
    [auth.basic]
    enabled = false
    [auth.google]
    enabled = false
    [log]
    mode = file
    [users]
    allow_sign_up = false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: grafana-config-volume
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-config-volume
          configMap:
            name: grafana-config

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30000